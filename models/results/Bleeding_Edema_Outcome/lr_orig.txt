2025-03-29 17:19:46.327 | INFO     | circ_milan.config:<module>:31 - PROJ_ROOT path is: /home/lshpaner/Python_Projects/circ_milan
2025-03-29 17:19:46.357 | INFO     | __main__:main:106 - Training lr for Bleeding_Edema_Outcome ...
Sampler None

Outcome:
------------------------------------------------------------

============================================================
Bleeding_Edema_Outcome
============================================================

Pipeline Steps:

┌──────────────────────────────────────────────────────┐
│ Step 1: preprocess_column_transformer_Preprocessor   │
│ ColumnTransformer                                    │
└──────────────────────────────────────────────────────┘
                           │
                           ▼
┌──────────────────────────────────────────────────────┐
│ Step 2: lr                                           │
│ LogisticRegression                                   │
└──────────────────────────────────────────────────────┘

# Tuning hyper-parameters for average_precision
Fitting 10 folds for each of 5 candidates, totalling 50 fits
[CV] END .......................lr__C=0.0001, lr__penalty=l2; total time=   0.0s
[CV] END ........................lr__C=0.001, lr__penalty=l2; total time=   0.0s
[CV] END ........................lr__C=0.001, lr__penalty=l2; total time=   0.0s
[CV] END .........................lr__C=0.01, lr__penalty=l2; total time=   0.0s
[CV] END .........................lr__C=0.01, lr__penalty=l2; total time=   0.0s
[CV] END ..........................lr__C=0.1, lr__penalty=l2; total time=   0.0s
[CV] END ..........................lr__C=0.1, lr__penalty=l2; total time=   0.0s
[CV] END ..........................lr__C=1.0, lr__penalty=l2; total time=   0.0s
[CV] END ..........................lr__C=1.0, lr__penalty=l2; total time=   0.0s
[CV] END .......................lr__C=0.0001, lr__penalty=l2; total time=   0.0s
[CV] END .......................lr__C=0.0001, lr__penalty=l2; total time=   0.0s
[CV] END .......................lr__C=0.0001, lr__penalty=l2; total time=   0.0s
[CV] END ........................lr__C=0.001, lr__penalty=l2; total time=   0.0s
[CV] END ........................lr__C=0.001, lr__penalty=l2; total time=   0.0s
[CV] END ........................lr__C=0.001, lr__penalty=l2; total time=   0.0s
[CV] END .........................lr__C=0.01, lr__penalty=l2; total time=   0.0s
[CV] END .........................lr__C=0.01, lr__penalty=l2; total time=   0.0s
[CV] END ..........................lr__C=0.1, lr__penalty=l2; total time=   0.0s
[CV] END ..........................lr__C=0.1, lr__penalty=l2; total time=   0.0s
[CV] END ..........................lr__C=1.0, lr__penalty=l2; total time=   0.0s
[CV] END ..........................lr__C=1.0, lr__penalty=l2; total time=   0.0s
[CV] END .......................lr__C=0.0001, lr__penalty=l2; total time=   0.0s
[CV] END .......................lr__C=0.0001, lr__penalty=l2; total time=   0.0s
[CV] END .......................lr__C=0.0001, lr__penalty=l2; total time=   0.0s
[CV] END .......................lr__C=0.0001, lr__penalty=l2; total time=   0.0s
[CV] END ........................lr__C=0.001, lr__penalty=l2; total time=   0.0s
[CV] END ........................lr__C=0.001, lr__penalty=l2; total time=   0.0s
[CV] END ........................lr__C=0.001, lr__penalty=l2; total time=   0.0s
[CV] END .........................lr__C=0.01, lr__penalty=l2; total time=   0.0s
[CV] END .........................lr__C=0.01, lr__penalty=l2; total time=   0.0s
[CV] END ..........................lr__C=0.1, lr__penalty=l2; total time=   0.0s
[CV] END ..........................lr__C=0.1, lr__penalty=l2; total time=   0.0s
[CV] END ..........................lr__C=1.0, lr__penalty=l2; total time=   0.0s
[CV] END ..........................lr__C=1.0, lr__penalty=l2; total time=   0.0s
[CV] END .......................lr__C=0.0001, lr__penalty=l2; total time=   0.0s
[CV] END .........................lr__C=0.01, lr__penalty=l2; total time=   0.0s
[CV] END ..........................lr__C=0.1, lr__penalty=l2; total time=   0.0s
[CV] END ..........................lr__C=0.1, lr__penalty=l2; total time=   0.0s
[CV] END ..........................lr__C=1.0, lr__penalty=l2; total time=   0.0s
[CV] END ..........................lr__C=1.0, lr__penalty=l2; total time=   0.0s
[CV] END .......................lr__C=0.0001, lr__penalty=l2; total time=   0.0s
[CV] END ........................lr__C=0.001, lr__penalty=l2; total time=   0.0s
[CV] END ........................lr__C=0.001, lr__penalty=l2; total time=   0.0s
[CV] END .........................lr__C=0.01, lr__penalty=l2; total time=   0.0s
[CV] END .........................lr__C=0.01, lr__penalty=l2; total time=   0.0s
[CV] END .........................lr__C=0.01, lr__penalty=l2; total time=   0.0s
[CV] END ..........................lr__C=0.1, lr__penalty=l2; total time=   0.0s
[CV] END ..........................lr__C=0.1, lr__penalty=l2; total time=   0.0s
[CV] END ..........................lr__C=1.0, lr__penalty=l2; total time=   0.0s
[CV] END ..........................lr__C=1.0, lr__penalty=l2; total time=   0.0s

Best score/param set found on development set:
{0.8664633144633143: {'lr__C': 0.1, 'lr__penalty': 'l2'}}

Grid scores on development set:
0.812 (+/-0.298) for {'lr__C': 0.0001, 'lr__penalty': 'l2'}
0.815 (+/-0.293) for {'lr__C': 0.001, 'lr__penalty': 'l2'}
0.833 (+/-0.249) for {'lr__C': 0.01, 'lr__penalty': 'l2'}
0.866 (+/-0.245) for {'lr__C': 0.1, 'lr__penalty': 'l2'}
0.855 (+/-0.244) for {'lr__C': 1.0, 'lr__penalty': 'l2'}
Fitting model with best params and tuning for best threshold ...
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  9.44it/s]100%|██████████| 1/1 [00:00<00:00,  9.42it/s]
Fitting model with best params and tuning for best threshold ...
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00, 10.19it/s]
Fitting model with best params and tuning for best threshold ...
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  7.25it/s]100%|██████████| 1/1 [00:00<00:00,  7.25it/s]
Fitting model with best params and tuning for best threshold ...
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00, 10.33it/s]
Fitting model with best params and tuning for best threshold ...
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.30it/s]100%|██████████| 1/1 [00:00<00:00,  8.29it/s]
Fitting model with best params and tuning for best threshold ...
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00, 11.29it/s]
Fitting model with best params and tuning for best threshold ...
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00, 10.88it/s]
Fitting model with best params and tuning for best threshold ...
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  9.41it/s]100%|██████████| 1/1 [00:00<00:00,  9.40it/s]
Fitting model with best params and tuning for best threshold ...
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00, 10.03it/s]
Fitting model with best params and tuning for best threshold ...
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00, 10.77it/s]

Detailed classification report for lr:

Confusion Matrix Across All 10 Folds for average_precision:
--------------------------------------------------------------------------------
          Predicted:
             Pos   Neg
--------------------------------------------------------------------------------
Actual: Pos  42 (tp)   16 (fn)
        Neg  13 (fp)  123 (tn)
--------------------------------------------------------------------------------

Classification Report Averaged Across All Folds for average_precision:
              precision    recall  f1-score   support

           0       0.88      0.90      0.89       136
           1       0.76      0.72      0.74        58

    accuracy                           0.85       194
   macro avg       0.82      0.81      0.82       194
weighted avg       0.85      0.85      0.85       194

--------------------------------------------------------------------------------
The model is trained on the full development set.
The scores are computed on the full evaluation set.

Optimal threshold used: 0.496

Running k-fold model metrics...

Processing Folds:   0%|          | 0/10 [00:00<?, ?it/s]Processing Folds:  50%|█████     | 5/10 [00:00<00:00, 43.99it/s]Processing Folds: 100%|██████████| 10/10 [00:00<00:00, 45.34it/s]Processing Folds: 100%|██████████| 10/10 [00:00<00:00, 45.10it/s]
[31m2025/03/29 17:19:56 WARNING mlflow.models.model: Model logged without a signature and input example. Please set `input_example` parameter when logging the model to auto infer the model signature.[0m
2025-03-29 17:19:56.648 | SUCCESS  | __main__:main:219 - Modeling training complete.

Average Metrics Across All Folds:
              Metric     Value
0      Precision/PPV  0.763636
1  Average Precision  0.825892
2        Sensitivity  0.724138
3        Specificity  0.904412
4            AUC ROC  0.903651
5        Brier Score  0.126882
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------

Experiment 'Bleeding_Edema_Outcome_model' does not exist. Creating a new one.
No runs found with run_name 'lr_orig_training' in experiment 'Bleeding_Edema_Outcome_model'. Creating a new run.
Starting New Run_ID: de7ba6b21a8c498c9ff1dfc28aa1c926 for lr_orig_training
Experiment_ID for model lr and parameters: 290298431068482232
experiment_id=290298431068482232, run_id=de7ba6b21a8c498c9ff1dfc28aa1c926
Parameters and model logged successfully in MLflow.
